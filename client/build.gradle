import org.gradle.internal.os.OperatingSystem

plugins {
    id 'io.spring.dependency-management' version "${dependencyManagementVersion}"
    id 'org.springframework.boot' version "${springBootVersion}"
    id 'java'
}

group 'dev.peytob.rpg'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

switch (OperatingSystem.current()) {
    case OperatingSystem.LINUX:
        def osArch = System.getProperty("os.arch")
        project.ext.lwjglNatives = osArch.startsWith("arm") || osArch.startsWith("aarch64")
                ? "natives-linux-${osArch.contains("64") || osArch.startsWith("armv8") ? "arm64" : "arm32"}"
                : "natives-linux"
        break
    case OperatingSystem.MAC_OS:
        project.ext.lwjglNatives = System.getProperty("os.arch").startsWith("aarch64") ? "natives-macos-arm64" : "natives-macos"
        break
    case OperatingSystem.WINDOWS:
        def osArch = System.getProperty("os.arch")
        project.ext.lwjglNatives = osArch.contains("64")
                ? "natives-windows${osArch.startsWith("aarch64") ? "-arm64" : ""}"
                : "natives-windows-x86"
        break
}

project.ext.lwjglVersion = '3.3.0'

dependencies {
    implementation project(':core')
    implementation project(':ecs')
    implementation project(':engine')
    implementation project(':math')

    implementation platform("org.lwjgl:lwjgl-bom:$lwjglVersion")
    implementation 'org.lwjgl:lwjgl'
    implementation 'org.lwjgl:lwjgl-glfw'
    implementation 'org.lwjgl:lwjgl-opengl'
    implementation 'org.lwjgl:lwjgl-stb'
    runtimeOnly "org.lwjgl:lwjgl::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-glfw::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-opengl::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-stb::$lwjglNatives"

    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'

    compileOnly "org.projectlombok:lombok"
    annotationProcessor "org.projectlombok:lombok"
    annotationProcessor "org.projectlombok:lombok-mapstruct-binding:${lombokMapstructBindingVersion}"

    compileOnly "org.mapstruct:mapstruct:${mapstructVersion}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"

    implementation "com.google.guava:guava:${guavaVersion}"
    implementation "net.javacrumbs.future-converter:future-converter-java8-guava:${futureConvertersVersion}"

    implementation "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"

    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitApiVersion}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitApiVersion}"
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

springBoot {
    buildInfo()
}

test {
    useJUnitPlatform()
}
